name: Auto Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Package extension
      run: npm run package
      
    - name: Get version from manifest
      id: get_version
      run: |
        VERSION=$(node -p "require('./manifest.json').version")
        echo "version=v$VERSION" >> $GITHUB_OUTPUT
        echo "Extension version: v$VERSION"
        
    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "refs/tags/${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Git tag
      if: steps.check_tag.outputs.exists == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ steps.get_version.outputs.version }}
        git push origin ${{ steps.get_version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      if: steps.check_tag.outputs.exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## What's Changed
          
          Automatic release for version ${{ steps.get_version.outputs.version }}
          
          ### Installation
          1. Download the `gemini-search.zip` file below
          2. Extract the contents
          3. Load the extension in Chrome via `chrome://extensions/` in developer mode
          
          ### Features
          - Smart bang redirects (!g, !yt, !ddg, !ch, !pr, etc.)
          - Default Gemini AI integration
          - Context menu "Search with Gemini" option
          - Privacy-first local processing
          
          **Full Changelog**: https://github.com/${{ github.repository }}/commits/${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: steps.check_tag.outputs.exists == 'false'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gemini-search.zip
        asset_name: gemini-search.zip
        asset_content_type: application/zip
        
    - name: Update existing release
      if: steps.check_tag.outputs.exists == 'true'
      run: |
        echo "Tag ${{ steps.get_version.outputs.version }} already exists. Skipping release creation."
        echo "If you want to create a new release, please update the version in manifest.json"
